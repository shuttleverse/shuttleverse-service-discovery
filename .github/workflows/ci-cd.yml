name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  # CI for pull requests
  ci:
    name: Build, Test, and Security Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Dependencies
        run: ./mvnw dependency:resolve

      - name: Run Tests
        run: ./mvnw test

  # CD for main branch
  cd:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      id-token: write
      
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      OCI_CLI_KEY_PASSPHRASE: ${{ secrets.OCI_CLI_KEY_PASSPHRASE }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

        # ARM Simulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

        # Multi-arch build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push ARM64 Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64 
          push: true 
          tags: ${{ secrets.DOCKER_USERNAME }}/shuttleverse-service-discovery:latest
          build-args: |
            SPRING_PROFILE=prod

      - name: Configure Kubectl
        uses: oracle-actions/configure-kubectl-oke@v1.5.0
        with:
          cluster: ${{ secrets.OKE_CLUSTER_OCID }}

      - name: Inject Docker Username into Deployment YAML
        run: |
          sed -i "s|docker-user|${{ secrets.DOCKER_USERNAME }}|g" k8s/deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          
      - name: Restart Deployment
        run: |
          kubectl rollout restart deployment shuttleverse-service-discovery




